service: app-pizza

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs22.x
  stage: dev
  profile: developer
  region: us-east-2
  layers:
    - { Ref: DependenciesLambdaLayer }
  environment:
    APP_REGION: ${self:provider.region}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource:
            - Fn::GetAtt:
                - PendingOrdersQueue
                - Arn
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource:
            - Fn::GetAtt:
                - DeliveryPendingOrdersQueue
                - Arn
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
          Resource:
            - Fn::GetAtt:
                - OrderTable
                - Arn

layers:
  dependencies:
    path: layers
    name: ${self:service}-dependencies-${self:provider.stage}
    description: Production dependencies layer
    retain: false
    compatibleArchitectures:
      - x86_64
    compatibleRuntimes:
      - nodejs22.x

functions:
  createOrder:
    handler: build/orders/src/main.handler
    name: create-new-order${self:service}-${self:provider.stage}
    package:
      patterns:
        - build/orders/src/**
    events:
      - httpApi:
          path: /orders
          method: POST
    environment:
      PENDING_ORDERS_QUEUE_URL:
        Ref: PendingOrdersQueue
      ORDERS_TABLE_NAME: ${self:custom.dynamodb.orderTable}
  getOrder:
    handler: build/order/src/main.handler
    name: get-order-${self:service}-${self:provider.stage}
    package:
      patterns:
        - build/order/src/**
    events:
      - httpApi:
          path: /orders/{orderId}
          method: GET
    environment:
      ORDERS_TABLE_NAME: ${self:custom.dynamodb.orderTable}
  prepareOrder:
    handler: build/queue/src/main.handler
    name: prepare-order-${self:service}-${self:provider.stage}
    package:
      patterns:
        - build/queue/src/**
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PendingOrdersQueue
              - Arn
          batchSize: 1
    environment:
      ORDERS_TABLE_NAME: ${self:custom.dynamodb.orderTable}
  deliverOrder:
    handler: build/delivery/src/main.handler
    name: deliver-order-${self:service}-${self:provider.stage}
    package:
      patterns:
        - build/delivery/src/**
    environment:
      DELIVERY_PENDING_ORDERS_QUEUE_URL:
        Ref: DeliveryPendingOrdersQueue

resources:
  Resources:
    DependenciesLambdaLayer:
      Type: AWS::Lambda::LayerVersion
      Properties:
        LayerName: ${self:service}-dependencies-${self:provider.stage}
        Description: Production dependencies layer
        CompatibleRuntimes:
          - nodejs22.x
        CompatibleArchitectures:
          - x86_64
    PendingOrdersQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: pending-${self:service}-queue
    DeliveryPendingOrdersQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: delivery-pending-${self:service}-queue
    OrderTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamodb.orderTable}
        AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
        KeySchema:
          - AttributeName: orderId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

build:
  esBuild:
    bundle: true
    minify: true
    sourcemap:
      type: linked
      setNodeOptions: true

package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!coverage/**'
    - '!apps/**'
    - '!build/**'
    - '!serverless.yml'
    - '!.git/**'
    - '!.eslintrc.js'
    - '!.prettierrc'
    - '!.gitignore'
    - '!nest-cli.json'
    - '!package.json'
    - '!package-lock.json'
    - '!README.md'
    - '!tsconfig.build.json'
    - '!tsconfig.json'
    - '!yarn.lock'

custom:
  dynamodb:
    orderTable: ${self:service}-orders
